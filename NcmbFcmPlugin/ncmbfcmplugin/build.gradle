apply plugin: 'com.android.library'

android {
    compileSdkVersion 33
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
repositories {
    google()
    mavenCentral()
}

dependencies {
//    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.1'
    implementation 'androidx.navigation:navigation-ui:2.4.1'
    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.4'
    compileOnly fileTree(dir: 'src/libs', include: ['*.aar', '*.jar'], exclude: [])
}

android.libraryVariants.all { variant ->
    variant.outputs.each { output ->
        output.packageLibrary.exclude('libs/classes.jar')
    }
}

task clearAar(type: Delete) {
    delete 'build/outputs/aar' + AAR_NAME
    delete 'release/' + AAR_NAME
}

task makeAar(type: Copy) {
    from('build/outputs/aar/')
    into('release/')
    include('ncmbfcmplugin-release.aar')
    rename('ncmbfcmplugin-release.aar', AAR_NAME)
}
makeAar.dependsOn(clearAar, 'assembleRelease')