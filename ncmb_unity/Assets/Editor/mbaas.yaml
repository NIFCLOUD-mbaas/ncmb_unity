# Use NCMBUserTest
---
request:
  url: 2013-09-01/logout
  method: GET
  body:
    Content-Type: application/json
response:
  status: 200
  file: /json/logout_script_response.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      facebook:
        id: invalidFacebookDummyId
        access_token: invalidFacebookDummyAccessToken
        expiration_date:
          __type: Date
          iso: "2017-02-07T01:02:03.004Z"
response:
  status: 401
  file: /json/authentication_error_facebook.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    authData:
      twitter:
        id: twitterDummyId
        screen_name: twitterDummyScreenName
        oauth_consumer_key: twitterDummyConsumerKey
        consumer_secret: twitterDummyConsumerSecret
        oauth_token: twitterDummyAuthToken
        oauth_token_secret: twitterDummyAuthSecret
response:
  status: 201
  file: /json/valid_post_registerUserTwitter_response.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    authData:
      facebook:
        id: facebookDummyId
        access_token: facebookDummyAccessToken
        expiration_date:
          __type: Date
          iso: "2017-02-07T01:02:03.004Z"
response:
  status: 201
  file: /json/valid_post_registerUserFacebook_response.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    authData:
      facebook:
        id: invalidFacebookDummyId
        access_token: invalidFacebookDummyAccessToken
        expiration_date:
          __type: Date
          iso: "2017-02-07T01:02:03.004Z"
response:
  status: 404
  file: /json/authentication_error_facebook.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      facebook:
        id: facebookDummyId
        access_token: facebookDummyAccessToken
        expiration_date:
          __type: Date
          iso: "2017-02-07T01:02:03.004Z"
response:
  status: 201
  file: /json/valid_put_response.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      facebook: null
response:
  status: 201
  file: /json/valid_put_response.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    authData:
      twitter:
        id: invalidTwitterDummyId
        screen_name: invalidTwitterDummyScreenName
        oauth_consumer_key: invalidTwitterDummyConsumerKey
        consumer_secret: invalidTwitterDummyConsumerSecret
        oauth_token: invalidTwitterDummyAuthToken
        oauth_token_secret: invalidTwitterDummyAuthSecret
response:
  status: 401
  file: /json/authentication_error_twitter.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      twitter:
        id: twitterDummyId
        screen_name: twitterDummyScreenName
        oauth_consumer_key: twitterDummyConsumerKey
        consumer_secret: twitterDummyConsumerSecret
        oauth_token: twitterDummyAuthToken
        oauth_token_secret: twitterDummyAuthSecret
response:
  status: 201
  file: /json/valid_put_response.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      twitter:
        id: invalidTwitterDummyId
        screen_name: invalidTwitterDummyScreenName
        oauth_consumer_key: invalidTwitterDummyConsumerKey
        consumer_secret: invalidTwitterDummyConsumerSecret
        oauth_token: invalidTwitterDummyAuthToken
        oauth_token_secret: invalidTwitterDummyAuthSecret
response:
  status: 401
  file: /json/authentication_error_twitter.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      twitter: null
response:
  status: 201
  file: /json/valid_put_response.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    authData:
      google:
        id: googleDummyId
        access_token: googleDummyAccessToken
response:
  status: 201
  file: /json/valid_post_registerUserGoogle_response.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    authData:
      google:
        id: invalidGoogleDummyId
        access_token: invalidGoogleDummyAccessToken
response:
  status: 401
  file: /json/authentication_error_google.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      google:
        id: googleDummyId
        access_token: googleDummyAccessToken
response:
  status: 201
  file: /json/valid_put_response.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      google:
        id: invalidGoogleDummyId
        access_token: invalidGoogleDummyAccessToken
response:
  status: 401
  file: /json/authentication_error_google.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: PUT
  body:
    authData:
      google: null
response:
  status: 201
  file: /json/valid_put_response.json
---
request:
  url: 2013-09-01/users/dummyObjectId
  method: DELETE
response:
  status: 200
  file: /json/valid_empty_script_response.json
---
request:
  url: 2013-09-01/logout
  method: GET
  header:
    X-NCMB-Apps-Session-Token: dummySessionToken
response:
  status: 200
  file: /json/valid_empty_script_response.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    userName: "tarou"
    password: "tarou"
    mailAddress: "sample@example.com"
response:
  status: 201
  file: /json/valid_post_registerUser_response.json
# Use NCMBUserTest
---
request:
  url: 2015-09-01/script/testScript_POST.js
  method: POST
  body:
    name: tarou
response:
  status: 201
  file: /json/valid_hello_script_response.json
---
request:
  url: 2015-09-01/script/testScriptObject_GET.js
  method: GET
  query:
    name: "[\"tarou1\",\"tarou2\"]"
response:
  status: 200
  file: /json/valid_script_object_test_response.json
---
request:
  url: 2015-09-01/script/testScript_PUT.js
  method: PUT
  body:
     name: tarou
response:
  status: 201
  file: /json/valid_hello_script_response.json
---
request:
  url: 2015-09-01/script/testScript_GET.js
  method: GET
  query:
    name: tarou
response:
  status: 200
  file: /json/valid_hello_script_response.json
---
request:
  url: 2015-09-01/script/testScript_GET.js
  method: GET
  query:
    name: tarou
    message: hello
response:
  status: 200
  file: /json/valid_count_script_response.json
---
request:
  url: 2015-09-01/script/testScript_DELETE.js
  method: DELETE
response:
  status: 200
  file: /json/valid_empty_script_response.json
---
request:
  url: 2015-09-01/script/testScript_Error.js
  method: GET
response:
  status: 404
  file: /json/valid_error_script_notFound_response.json
---
request:
  url: 2015-09-01/script/testScript_Header.js
  method: POST
  header:
    key: value
response:
  status: 201
  file: /json/valid_value_script_response.json
# Use NCMBObjectTest
---
request:
  url: 2013-09-01/classes/TestClass
  method: POST
  body:
    key: \"test\"
response:
  status: 201
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/classes/TestClass
  method: GET
  query:
    where:
        objectId: dummyObjectId
response:
  status: 201
  file: /json/get_object_test_response.json
# Use NCMBFileTest
---
request:
  url: 2013-09-01/files/ACL.txt
  method: POST
  body:
    fileName: ACL.txt
    mimeType: text/plain
    fileSize: 8
    createDate: 2017-07-19T02:27:55.867Z
    updateDate: 2017-07-19T02:27:55.867Z
response:
  status: 200
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/files
  method: GET
  query:
    where:
        fileName: ACL.txt
response:
  status: 200
  file: /json/get_object_test_response.json
---
request:
  url: 2013-09-01/files/test.txt
  method: POST
  body:
    fileName: test.txt
    mimeType: text/plain
    fileSize: 8
    createDate: 2017-07-19T02:27:55.867Z
    updateDate: 2017-07-19T02:27:55.867Z
response:
  status: 200
  file: /json/create_date_response.json
---
request:
  url: 2013-09-01/files/test.txt
  method: GET
response:
  status: 200
  file: /json/file_hello_response.json
---
request:
  url: 2013-09-01/users
  method: POST
  body:
    userName: expertUser
    password: pass
response:
  status: 200
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/files/delete.txt
  method: POST
  body:
    fileName: delete.txt
    mimeType: text/plain
    fileSize: 8
    createDate: 2017-07-19T02:27:55.867Z
    updateDate: 2017-07-19T02:27:55.867Z
response:
  status: 200
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/files/delete.txt/dummyObjectId
  method: DELETE
response:
  status: 200
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/files
  method: GET
  query:
    where:
        fileName: delete.txt
response:
  status: 200
  file: /json/query_empty_response.json
---
request:
  url: 2013-09-01/files/日本語.txt
  method: POST
  body: hello
response:
  status: 200
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/files/logo.png
  method: POST
  body: hello
response:
  status: 200
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/files
  method: GET
  query:
    where: "{}"
response:
  status: 200
  file: /json/get_object_test_response.json
# Use NCMBRoleTest
---
request:
  url: 2013-09-01/roles
  method: POST
  body:
    roleName: expertPlan
response:
  status: 200
  file: /json/post_success_response.json
---
request:
  url: 2013-09-01/roles
  method: GET
  query:
    where:
        roleName: expertPlan
response:
  status: 200
  file: /json/get_object_test_response.json
---
request:
  url: 2013-09-01/roles/dummyObjectId
  method: PUT
  body:
    belongUser:
        __op: AddRelation
        objects: "[{\"__type\":\"Pointer\",\"className\":\"user\",\"objectId\":\"dummyObjectId\"}]"
response:
  status: 200
  file: /json/get_object_test_response.json
---
request:
  url: 2013-09-01/roles
  method: GET
  query:
    where:
        $relatedTo:
            object:
                __type: Pointer
                className: role
                objectId: dummyObjectId
            key: belongUser
response:
  status: 200
  file: /json/get_user_test_response.json
...

